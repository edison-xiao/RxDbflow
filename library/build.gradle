apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group= 'com.github.roadhouse-dev'


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'com.github.Raizlabs.DBFlow:dbflow:3.1.1'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task(type: Zip, "zipTestReport") {
    from("${rootDir.absolutePath}/library/build/reports/androidTests/connected/")
    archiveName 'test_report_library.zip'
    destinationDir file("${rootDir.absolutePath}/library/build/reports/")
}

configure(zipTestReport) {
    group = 'verification'
    description = 'Create a test report archive'
}

task(type: Zip, "zipLintReport") {
    from "${rootDir.absolutePath}/library/build/outputs/"
    include "lint-results-debug.html"
    include "lint-results-debug_files/*"
    archiveName 'lint_report_library.zip'
    destinationDir file("${rootDir.absolutePath}/library/build/reports/")
}

configure(zipLintReport) {
    group = 'verification'
    description = 'Create a lint report archive'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


